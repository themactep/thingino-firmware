#!/bin/sh

. /usr/share/common

WIREGUARD_INTERFACE="wg0"

[ -n "$wg_address" ] || die "No WireGuard IP address configured"

RESOLV_CONF="/tmp/resolv.conf"
RESOLV_BAK="${RESOLV_CONF}.bak"

start() {
	echo "Starting WireGuard"
	# "force" is for testing, to start WireGuard on demand without having it enabled at boot
	# "start" is for the normal boot process

	[ "true" != "$wg_enabled" ] && [ "force" != "$1" ] && quit "Disabled"

	ip link show $WIREGUARD_INTERFACE 2>&1 | grep -q 'UP' && \
		die "WireGuard interface $WIREGUARD_INTERFACE already running"

	ip link add dev $WIREGUARD_INTERFACE type wireguard

	tmp_file=$(mktemp -u)
	{
		echo '[Interface]'
		echo "PrivateKey=$wg_privkey"
		[ -n "$wg_port" ] && echo "ListenPort=$wireguard_port"
		echo '[Peer]'
		echo "Endpoint=$wg_endpoint"
		echo "PublicKey=$wg_peerpub"
		[ -n "$wg_peerpsk" ] && echo "PresharedKey=$wg_peerpsk"
		[ -n "$wg_allowed" ] && echo "AllowedIPs=$wg_allowed"
		[ -n "$wg_keepalive" ] && echo "PersistentKeepalive=$wg_keepalive"
	} >> "$tmp_file"
	wg setconf $WIREGUARD_INTERFACE "$tmp_file"
	rm "$tmp_file"

	ip address add $wg_address dev $WIREGUARD_INTERFACE

	[ -n "$wg_mtu" ] && link_mtu="mtu $wg_mtu"
	ip link set $link_mtu up dev $WIREGUARD_INTERFACE

	if [ -n "$wg_dns" ] ; then
		tmp_file=$(mktemp)
		grep -v nameserver $RESOLV_CONF >> "$tmp_file"
		for x in $(echo $wg_dns | tr "," " ") ; do
			echo "nameserver $x" >> "$tmp_file"
		done
		mv $RESOLV_CONF $RESOLV_BAK
		mv "$tmp_file" $RESOLV_CONF
	fi

	for r in $(echo "$wg_allowed" | tr "," " ") ; do
		ip route add $r dev $WIREGUARD_INTERFACE
	done
}

stop() {
	echo "Stopping WireGuard"

	for r in $(ip route | awk '/dev wg/{print $1}') ; do
		route del $r dev $WIREGUARD_INTERFACE
	done

	ip link set down $WIREGUARD_INTERFACE
	ip address del $wg_address dev $WIREGUARD_INTERFACE
	[ -s $RESOLV_BAK ] && mv $RESOLV_BAK $RESOLV_CONF
}

case "$1" in
	force | start)
		start
		;;
	stop)
		stop
		;;
	*)
		echo "Usage: $0 {force|start|stop}"
		exit 1
		;;
esac

exit 0
